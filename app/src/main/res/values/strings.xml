<?xml version="1.0" encoding="utf-8"?>
<!--
 ! Excerpted from "Hello, Android",
 ! published by The Pragmatic Bookshelf.
 ! Copyrights apply to this code. It may not be used to create training material, 
 ! courses, books, articles, and the like. Contact us if you are in doubt.
 ! We make no guarantees that this code is fit for any purpose. 
 ! Visit http://www.pragmaticprogrammer.com/titles/eband4 for more book information.
-->
<resources>
    <string name="app_name">NUMAD17S-PriyankaBH</string>
    <string name="long_app_name">Ultimate Tic Tac Toe</string>
    <string name="scroggle_app_name">Scroggle</string>
    <string name="action_settings">Settings</string>
    <string name="restart_label">Restart</string>
    <string name="main_menu_label">Main Menu</string>
    <string name="declare_winner">%1$s is the winner</string>
    <string name="continue_label">Continue</string>
    <string name="new_game_label">New Game</string>
    <string name="about_title">About Ultimate Tic Tac Toe</string>
    <string name="about_label">About</string>
    <string name="ok_label">OK</string>
    <string name="tictactoe_label">TicTacToe</string>
    <string name="generate_error_label">Generate Error</string>
    <string name="quit_label">Quit</string>
    <string name="dictionary_label">Dictionary</string>
    <string name="text_entry">Enter Word</string>
    <string name="ack_label">Acknowledgement</string>
    <string name="return_menu_label">Return to Menu</string>
    <string name="clear_label">Clear</string>
    <string name="about_me">
        \n\
        <b>Name: </b> B H Priyanka
        \n\
        <b>Email: </b> BHPriyanka@ccs.neu.edu
        \n\
        <b>Year in School: </b>  2nd year MS
        \n\
        <b>Degree Program: </b> MS in CS
        \n\
        <b>IMEI Id:</b>
    </string>
    <string name="about_text">
        This game is played just like
regular Tic Tac Toe with one difference: to win a tile
you have to win a smaller game of Tic Tac Toe inside that tile.\n\
\n\
A tie happens when there are no further moves.
In the case of a tie in a small board, that will count as a win for
both sides in the larger game.

    </string>
    <string name="my_name">B H Priyanka</string>
    <string name="acknowledgement">
        <b>Strategy:</b>
        \n\
        <p>
            Wordlist.txt is placed in assets folder as it is. In the Test Dictionary activity,  while calling onCreate , the AsyncTask
            class is used to run the loading of the wordlist in the background. A HashMap{String,ArrayList{String}} is created in the
            GlobalClass. This data structure is used to map the words from the wordlist. The loop iterates over the file line by line,
            considers the first two characters of the string, and adds it as the HashMap Key to the HashMap if its not already present.
            And then add the word to the Value of the corresponding key. </p>
        <p>
            If the key is already present in the HashMap, add the current word to the ArrayList value of the key represented by its first
            characters. And for the search process, check the key by considering the input word\'s first two characters, once
            it maps, check if its present in the corresponding ArrayList. Return true if its present, otherwise false.
        </p>
        \n\
        \n\
    <b>Sources/Links:</b>
        \n\
        <b>1. </b>First Approach tried: http://softwareengineering.stackexchange.com/questions/118759/how-to-quickly-search-through-a-very-large-list-of-strings-records-on-a-databa
        \n\
        <b>2.</b> Sound for beep: http://www.soundjig.com/pages/soundfx/beeps.html
        \n\
        <b>3. </b>Android Developer Guide for AsyncTask implementation:https://developer.android.com/reference/android/os/AsyncTask.html
        \n\
        No Images used
        \n\
        \n\

     <b>Help</b>
        \n\
        <b>1. </b> Class discussion and piazza post by Professor.
        \n\
        <b>2. </b> Help/Hack sessions: Discussion with TAs an other students
    </string>
    <string name="scroggle_ack">
        <b>Sources of content:</b>
        \n\
        <b>1.</b> Audio Samples:https://www.freesound.org/
        \n\
        http://www.orangefreesounds.com/category/music/background-music/
        \n\
        <b>Note: No images used</b>
        \n\
        <b>Sources of Code SNippets obtained: </b>
        \n\
        <b>1.</b>Blink timer: https://tausiq.wordpress.com/2012/02/28/count-down-timer-and-text-blinking-in-android/
        \n\
        <b>2.</b>Toast: https://developer.android.com/guide/topics/ui/notifiers/toasts.html
        \n\
        http://www.javatpoint.com/android-toast-example
        \n\
        <b>3.</b>AysncTask :http://stackoverflow.com/questions/9671546/asynctask-android-example
        \n\
    </string>
    <string name="instructions">
        <b>Scroggle</b>
        \n\
        An interesting word game mainly based on age old Boggle word game where you form words
        from the given letter in the grids.
        \n\
        <b>Scroggle Board</b>
        The board consists of one 3X3 Large Grid with 9 smaller Grids. The small grid is also a 3X3 grid.
        \n\
        <b>Time and Phases</b>
        Game runs for 3 minutes and consists of two phases with each phase running for 1.5 minutes.
        At the end of 1.5 minutes, the game automatically takes you to the next phase if you click on OK on the pop up.
        \n\
        <b>Rules</b>
        \n\
        <b>i.</b> In the first phase, play boggle on each of the small grids,i.e., form words of length anywhere between
        1-9.
        \n\
        <b>ii.</b> So you will have 9 different words(if you have found words in all 9 grids) for your second phase.
        \n\
        <b>iii.</b>In the second phase, all the words formed in phase one is displayed. Now form words by picking one letter
        from each quadrant. You can revisit the grids but not back-to-back which means that suppose the letter T is one grid,
        letters A and P are in same grid. the word TAP cannot be formed since A and P are in the same grid.
        \n\
        <b>iv.</b>Points for each phase is displayed
        <b> Go Scroggle!!</b>
    </string>
    </resources>
