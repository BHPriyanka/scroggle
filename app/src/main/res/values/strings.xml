<?xml version="1.0" encoding="utf-8"?>
<!--
 ! Excerpted from "Hello, Android",
 ! published by The Pragmatic Bookshelf.
 ! Copyrights apply to this code. It may not be used to create training material, 
 ! courses, books, articles, and the like. Contact us if you are in doubt.
 ! We make no guarantees that this code is fit for any purpose. 
 ! Visit http://www.pragmaticprogrammer.com/titles/eband4 for more book information.
-->
<resources>
    <string name="app_name">NUMAD17S-PriyankaBH</string>
    <string name="long_app_name">Ultimate Tic Tac Toe</string>
    <string name="scroggle_app_name">Scroggle</string>
    <string name="action_settings">Settings</string>
    <string name="restart_label">Restart</string>
    <string name="main_menu_label">Main Menu</string>
    <string name="declare_winner">%1$s is the winner</string>
    <string name="continue_label">Continue</string>
    <string name="new_game_label">Start New Game</string>
    <string name="new_game">Start Game</string>
    <string name="about_title">About Ultimate Tic Tac Toe</string>
    <string name="about_label">About</string>
    <string name="ok_label">OK</string>
    <string name="tictactoe_label">TicTacToe</string>
    <string name="generate_error_label">Generate Error</string>
    <string name="quit_label">Quit</string>
    <string name="dictionary_label">Dictionary</string>
    <string name="text_entry">Enter Word</string>
    <string name="ack_label">See Acknowledgement</string>
    <string name="return_menu_label">Return to Menu</string>
    <string name="clear_label">Clear</string>
    <string name="about_me">
        \n\
        <b>Name: </b> B H Priyanka
        \n\
        <b>Email: </b> BHPriyanka@ccs.neu.edu
        \n\
        <b>Year in School: </b>  2nd year MS
        \n\
        <b>Degree Program: </b> MS in CS
        \n\
        <b>IMEI Id:</b>
    </string>
    <string name="about_text">
        This game is played just like
regular Tic Tac Toe with one difference: to win a tile
you have to win a smaller game of Tic Tac Toe inside that tile.\n\
\n\
A tie happens when there are no further moves.
In the case of a tie in a small board, that will count as a win for
both sides in the larger game.

    </string>
    <string name="my_name">B H Priyanka</string>
    <string name="acknowledgement">
        <b>Strategy:</b>
        \n\
        <p>
            Wordlist.txt is placed in assets folder as it is. In the Test Dictionary activity,  while calling onCreate , the AsyncTask
            class is used to run the loading of the wordlist in the background. A HashMap{String,ArrayList{String}} is created in the
            GlobalClass. This data structure is used to map the words from the wordlist. The loop iterates over the file line by line,
            considers the first two characters of the string, and adds it as the HashMap Key to the HashMap if its not already present.
            And then add the word to the Value of the corresponding key. </p>
        <p>
            If the key is already present in the HashMap, add the current word to the ArrayList value of the key represented by its first
            characters. And for the search process, check the key by considering the input word\'s first two characters, once
            it maps, check if its present in the corresponding ArrayList. Return true if its present, otherwise false.
        </p>
        \n\
        \n\
    <b>Sources/Links:</b>
        \n\
        <b>1. </b>First Approach tried: http://softwareengineering.stackexchange.com/questions/118759/how-to-quickly-search-through-a-very-large-list-of-strings-records-on-a-databa
        \n\
        <b>2.</b> Sound for beep: http://www.soundjig.com/pages/soundfx/beeps.html
        \n\
        <b>3. </b>Android Developer Guide for AsyncTask implementation:https://developer.android.com/reference/android/os/AsyncTask.html
        \n\
        No Images used
        \n\
        \n\

     <b>Help</b>
        \n\
        <b>1. </b> Class discussion and piazza post by Professor.
        \n\
        <b>2. </b> Help/Hack sessions: Discussion with TAs an other students
    </string>
    <string name="scroggle_ack">
        <b>Sources of content:</b>
        \n\
        <b>1.Audio Samples :</b> https://www.freesound.org/
        \n\
        http://www.orangefreesounds.com/category/music/background-music/
        \n\
        <b>Note: Used the existing images from the drawable folder</b>
        \n\
        <b>Sources of Code Snippets obtained: </b>
        \n\
        <b>1.Blink timer :</b> https://tausiq.wordpress.com/2012/02/28/count-down-timer-and-text-blinking-in-android/
        \n\
        <b>2.Toast :</b> https://developer.android.com/guide/topics/ui/notifiers/toasts.html
        \n\
        http://www.javatpoint.com/android-toast-example
        \n\
        <b>3.AysncTask :</b>http://stackoverflow.com/questions/9671546/asynctask-android-example
        \n\
        <b>4.</b> Basic code framework copied from UTTT source code.
    </string>
    <string name="instructions">
        <b>Scroggle</b>
        \n\
        An interesting word game mainly based on age old Boggle word game where you form words
        from the given letter in the grids.
        \n\
        \n\
        <b>Scroggle Board :</b>
        The board consists of one 3X3 Large Grid with 9 smaller grids with each smaller grid itself being 3X3 grid.
        \n\
        \n\
        <b>Duration and Phases :</b>
        Game duration is of 3 minutes and consists of two phases with each phase running for 1.5 minutes.
        At the end of 1.5 minutes, the game automatically takes you to the next phase if you click on OK on the pop up.
        \n\
        \n\
        <b>Rules</b>
        \n\
        <b>i.</b> In the first phase, play boggle on each of the small grids,i.e., form words consisting of 3 to 9 letters.
        \n\
        <b>ii.</b> So you will have 9 different words(if you have found words in all 9 grids) for your second phase.
        \n\
        <b>iii.</b>In the second phase, all the words formed in phase one are displayed. Now form words by picking one letter
        from each quadrant. You can revisit the grids but not back-to-back which means that suppose the letter T is one grid,
        letters A and P are in same grid. the word TAP cannot be formed since A and P are in the same grid.
        \n\
        <b>iv.</b>Points for each phase is displayed
        \n\
        \n\
        <b>Scoring :</b>
        Each correct word formed fetches you certain points. Below is the split:
        \n\
        \n\
        <b>i. </b> One point each for E, A, I, O, N, R, T, L, S, U
        \n\
        <b>ii. </b> Two points each for D, G
        \n\
        <b>iii. </b> Three points each for B, C, M, P
        \n\
        <b>iv. </b> Four points each for F, H, V, W, Y
        \n\
        <b>v. </b> Five points for K
        \n\
        <b>vi. </b> Eight points each for J, X
        \n\
        <b>vii. </b> Ten points each for Q, Z
        \n\
        <b>viii. </b> Individual words will also fetch points depending on its length
        \n\
        Length-Points
        \n\
        3 - 6
        \n\
        4 - 8
        \n\
        5 - 10
        \n\
        6 - 12
        \n\
        7 - 14
        \n\
        8 - 16
        \n\
        9 - 25
        \n\
        \n\
        <b> Go Scroggle!!</b>
    </string>

    <string name="quickstart_message">The Log Token button logs the Registration token to the log. The Send Notification Button sends the notification to the client device.</string>
    <string name="send_notification">Send Notification</string>
    <string name="log_token">Log Token</string>


    <string name="msg_subscribed">Subscribed to news topic</string>
    <string name="msg_token_fmt" translatable="false">InstanceID Token: %s</string>

    <string name="go_to_fcm_demo">FCM Demo</string>
    <string name="go_to_realtime_database_demo">Realtime Database Demo</string>

    <string name="username">User Name</string>
    <string name="score">Score</string>

    <string name="add5">Add 5</string>

    <string name="communication_acknowledgement">
        <b>Sources of content:</b>
        \n\
        <b>Internet Connectivity Example :
            \n\
        </b> 1. http://viralpatel.net/blogs/android-internet-connection-status-network-change/
        \n\
        <b>2. </b>http://stackoverflow.com/questions/3141807/android-service-to-check-internet-connectivity
        \n\
        \n\
        <b>Sources of Code Snippets obtained: </b>
        \n\
        <b>1.CoordinatorLayout :
        \n\
        </b> http://www.androidauthority.com/using-coordinatorlayout-android-apps-703720/
        \n\
        <b>2.Snackbar :
        \n\
        </b> http://www.androidhive.info/2015/09/android-material-design-snackbar-example/
        \n\
    </string>

    <string name="time_activity_main">TimePicker</string>
    <string name="date_activity_main">DatePicker</string>
    <string name="eventTime_activity_main">EventTimePicker</string>
    <string name="pick_time">Set Time</string>
    <string name="pick_date">Set Date</string>
    <string name="startTime">Start Time</string>
    <string name="endTime">End Time</string>
    <string name="drawer_open">Open navigation drawer</string>
    <string name="drawer_close">Close navigation drawer</string>

    <string-array name="duration_array">
        <item>2 hours</item>
        <item>4 hours</item>
        <item>6 hours</item>
        <item>12 hours</item>
        <item>24 hours</item>
    </string-array>


    <string name="project_ack">
        <b>Internet Connectivity Example :</b>
        <b>1.</b> http://viralpatel.net/blogs/android-internet-connection-status-network-change/
        \n\
        <b>2. </b> http://stackoverflow.com/questions/3141807/android-service-to-check-internet-connectivity
        \n\
        \n\
        <b>Sources of Code Snippets obtained: </b>
        \n\
        <b>1. Pickers :</b> https://developer.android.com/guide/topics/ui/controls/pickers.html
        \n\
        <b>2. Google Maps API:</b> i. https://github.com/googlemaps/android-samples
        \n\
        ii. https://developers.google.com/maps/documentation/android-api/start
        \n\
        <b>3. Geocoding API:</b> i. https://developers.google.com/maps/documentation/geocoding/start
        \n\
        ii. https://developers.google.com/maps/documentation/javascript/geocoding
        \n\
        <b>4. Markers: </b> https://developers.google.com/maps/documentation/android-api/marker
        \n\
        <b>5. Intent Service: </b> http://www.peachpit.com/articles/article.aspx?p=1823692%20seqNum=4
        \n\

    </string>

    <string name="note2map_app_description">
        Place your note on your friend\'s map.
        \n\
        <b>Features:</b>
        \n\
        Note2Map is an app which allows you to put a location-based note on your friend/family member\'s map.
        \n\
        <b>Types of Notifications:</b>
        \n\
        <b>1.Event</b>
        \n\
        Ask your friend to attend an event on a given date and time at the chosen location. Your friend will receive
        a notification when he walks past the location of the event.
        \n\
        <b>2. Reminder</b>
        \n\
        Remind your son to buy chicken from market on the way back home. Your son will receive a notification when he crosses the market
        while driving back home.
        \n\
        <b>3. Direction</b>
        \n\
        Direct or instruct your friend to help him reach destination. Say if you want to show your friend how to get to Snell library,
        you can add notes along the way from Ruggles station to Snell. When your friend get to Ruggles,
        he gets a notification to go straight and take the second right, then when they get to the library,
        they will get another note that you are on the fourth floor.
        \n\
        \n\
        <b>Get Going!!</b>
    </string>
</resources>
