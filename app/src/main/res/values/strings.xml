<?xml version="1.0" encoding="utf-8"?>
<!--
 ! Excerpted from "Hello, Android",
 ! published by The Pragmatic Bookshelf.
 ! Copyrights apply to this code. It may not be used to create training material, 
 ! courses, books, articles, and the like. Contact us if you are in doubt.
 ! We make no guarantees that this code is fit for any purpose. 
 ! Visit http://www.pragmaticprogrammer.com/titles/eband4 for more book information.
-->
<resources>
    <string name="app_name">NUMAD17S-PriyankaBH</string>
    <string name="long_app_name">Ultimate Tic Tac Toe</string>
    <string name="action_settings">Settings</string>
    <string name="restart_label">Restart</string>
    <string name="main_menu_label">Main Menu</string>
    <string name="declare_winner">%1$s is the winner</string>
    <string name="continue_label">Continue</string>
    <string name="new_game_label">New Game</string>
    <string name="about_title">About Ultimate Tic Tac Toe</string>
    <string name="about_label">About</string>
    <string name="ok_label">OK</string>
    <string name="tictactoe_label">TicTacToe</string>
    <string name="generate_error_label">Generate Error</string>
    <string name="quit_label">Quit</string>
    <string name="dictionary_label">Dictionary</string>
    <string name="text_entry">Enter Word</string>
    <string name="ack_label">Acknowledgement</string>
    <string name="return_menu_label">Return to Menu</string>
    <string name="clear_label">Clear</string>
    <string name="about_me">
        \n\
        <b>Name: </b> B H Priyanka
        \n\
        <b>Email: </b> BHPriyanka@ccs.neu.edu
        \n\
        <b>Year in School: </b>  2nd year MS
        \n\
        <b>Degree Program: </b> MS in CS
        \n\
        <b>IMEI Id:</b>
    </string>
    <string name="about_text">
        This game is played just like
regular Tic Tac Toe with one difference: to win a tile
you have to win a smaller game of Tic Tac Toe inside that tile.\n\
\n\
A tie happens when there are no further moves.
In the case of a tie in a small board, that will count as a win for
both sides in the larger game.

    </string>
    <string name="my_name">B H Priyanka</string>
    <string name="acknowledgement">
        <b>Strategy:</b>
        \n\
        <p>Required alphabets are 1-26, which can be done with 5 bits of information because 2^5 = 32. Each letter of the word
        will be represented by 5 bits and the entire word will be a single long (64 bits) (handles a word up to 12 characters long).
        The long value is put in a ArrayList of longs and the entire sorted arraylist is stored in a file as a serialized object.
        The pre-proessed file will be used for the app, which reads the file content, deserializes into a Arraylist object.
        All words up to 12 characters long will use 8 bytes to store. The new word is checked whether it is in the list by converting the keyword to lowercase,
        encoding the word using the above technique</p>
        \n\
        \n\
    <b>Sources/Links:</b>
        \n\
        <b>1. </b>http://softwareengineering.stackexchange.com/questions/118759/how-to-quickly-search-through-a-very-large-list-of-strings-records-on-a-databa
        \n\
        <b>2.</b> http://stackoverflow.com/questions/2276641/way-to-store-a-large-dictionary-with-low-memory-footprint-fast-lookups-on-and
        \n\
        \n\

     <b>Help</b>
        \n\
        <b>1. </b> Class discussion and piazza post by Professor.
        \n\
        <b>2. </b> Help/Hack sessions: Discussion with TAs an other students
    </string>
    </resources>
